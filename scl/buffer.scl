FUNCTION_BLOCK FB50
VAR_INPUT
    DATA:ANY;
    PTR_DECOMPOSED AT DATA:
    STRUCT
        S7ID:BYTE;
        DATA_TYPE:BYTE;
        DB_NUMBER:WORD;
        MEMORY_AREA:BYTE;
        BIT_ADRESS:BYTE;
        BYTE_ADRESS:WORD;
    END_STRUCT;
    TIME_MARK:DATE_AND_TIME;
END_VAR
VAR_TEMP
    DATA_VALUE:DWORD;
    ONLY_READ:BOOL;
    SIZE:WORD;
    DTY:INT;
    MA:INT;
    BYTEIND:INT;
    BITIND:INT;
END_VAR
VAR_OUTPUT
    CODE:INT;
END_VAR
CONST
    N := 100;//размер буфера
END_CONST
VAR
   BUFSIZE:INT ;
   BUFF:ARRAY[0..N] OF DWORD;
   CURPOS:INT;
END_VAR
BUFSIZE:=N;//он пишется в блок данных первым, чтобы приложение могло знать сколько считывать
DTY:= BYTE_TO_INT(PTR_DECOMPOSED.DATA_TYPE);
MA:=BYTE_TO_INT(PTR_DECOMPOSED.MEMORY_AREA);
CODE:=0;
IF (MA=4 OR MA=5)
THEN
    CODE:=   TEST_DB(DB_NUMBER :=PTR_DECOMPOSED.DB_NUMBER 
        ,DB_LENGTH := SIZE 
        ,WRITE_PROT := ONLY_READ
        );
END_IF; 
IF (CURPOS>N-4)
THEN 
    CURPOS:=0;
END_IF;

IF (CODE=0)
THEN
    CASE DTY OF//тип данных
        B#16#01://бит
        CASE MA OF
            1:DATA_VALUE:=I[BYTEIND,BITIND];
            2:DATA_VALUE:=Q[BYTEIND,BITIND];
            3:DATA_VALUE:=M[BYTEIND,BITIND];
            4:DATA_VALUE:=WORD_TO_BLOCK_DB(PTR_DECOMPOSED.DB_NUMBER).DX[BYTEIND,BITIND];
            5:DATA_VALUE:=WORD_TO_BLOCK_DB(PTR_DECOMPOSED.DB_NUMBER).DX[BYTEIND,BITIND];
        END_CASE;
        B#16#05: CASE MA OF//инт
            1:DATA_VALUE:=IW[BYTEIND];
            2:DATA_VALUE:=QW[BYTEIND];
            3:DATA_VALUE:=MW[BYTEIND];
            4:DATA_VALUE:=WORD_TO_BLOCK_DB(PTR_DECOMPOSED.DB_NUMBER).DW[BYTEIND];
            5:DATA_VALUE:=WORD_TO_BLOCK_DB(PTR_DECOMPOSED.DB_NUMBER).DW[BYTEIND];
        END_CASE;

        B#16#07..B#16#08:CASE MA OF//динт и float
            1:DATA_VALUE:=ID[BYTEIND];
            2:DATA_VALUE:=QD[BYTEIND];
            3:DATA_VALUE:=MD[BYTEIND];
            4:DATA_VALUE:=WORD_TO_BLOCK_DB(PTR_DECOMPOSED.DB_NUMBER).DD[BYTEIND];
            5:DATA_VALUE:=WORD_TO_BLOCK_DB(PTR_DECOMPOSED.DB_NUMBER).DD[BYTEIND];
        END_CASE;
    ELSE:
        ;
    END_CASE;
        BUFF[CURPOS]:=INT_TO_DWORD(DTY);
        BUFF[CURPOS+1]:=DATA_VALUE;
        BUFF[CURPOS+2]:=DINT_TO_DWORD(TOD_TO_DINT(DT_TOD(IN:=TIME_MARK)));
        BUFF[CURPOS+3]:=DINT_TO_DWORD(DATE_TO_DINT(DT_DATE(IN:=TIME_MARK)) );
        CURPOS:=CURPOS+4;
END_IF;

END_FUNCTION_BLOCK
